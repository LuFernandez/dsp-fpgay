En primer lugar, los archivos ada_equ.asm, ioequ.asm, intequ.asm son constantes para inicializar el CS4218, puertos y registros I/O e interrupcionesdel DSP56307, respectivamente.
En cuanto al codec, su main es caniost.asm; primero configura el PLL, habilita interrupciones y resetea el stack pointer.
A continuación inicializa el codec en la subrutina ada_init que se encuentra en ada_init.asm.

ada_init:
-resetea los puertos ESSI0 y ESSI1 (Enhanced Synchronous Serial Interface).
-en el control register A= $101807(CRA, 24 bits):
	-bits [7:0]: setea prescaler modulus (elige 8)
	-bits [10:8]: estan reservados
	-bit 11: prescaler range, se usa cuando se requiere un clock lento, en este caso, al estar seteado este presacler se bypassea.
	-bit [16-12]: en modo normal, estos bits señalan el divide ratio, que viene a determinar el transfer rate de la palabra. El caso 00000 sería el envío continuo de palabras, en este caso, el frame rate divider es 2.
	-bit 17: reservado
	-bit 18: alignment control: las palabras recibidas están alineadas a la izquierda (left- aligned) al MSB (bit 23); y las transmitidas deben estar alineadas a la izquierda en el transmit register. Esto es porque se eligen palabras de 16 bits y el ESSI maneja data de 24 bits, entonces, al ser la palabra de menos de 24 bits, la data debe estar alineada al MSB.
	-bits [21-19]: word length a transmitir. 010-> 16bit word length
	-bit 22: Select SC1 (SSC1) = 0, entonces está en modo sincrónico (SYN = 1) y el transmisor 2 (TE2=0), luego SC1 actúa como el flag I/O serial mientras que la señal SC1 se configura como salida (SCD1=1)
	-bit 23: reservado



Resetea el codec 
(...)


Interrupciones: 
cuando llega una interrupcion es atendida en interrupts.asm, en left_ch	y right_ch, 
con los callbacks de interrupcion en caniost.asm donde se puede analizar de manera diferente cada canal
