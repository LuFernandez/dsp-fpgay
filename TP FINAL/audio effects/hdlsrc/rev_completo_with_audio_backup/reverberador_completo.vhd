-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\rev_completo_with_audio_backup\reverberador_completo.vhd
-- Created: 2021-02-20 19:49:52
-- 
-- Generated by MATLAB 9.4 and HDL Coder 3.12
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 2.26757e-05
-- Target subsystem base rate: 2.26757e-05
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        2.26757e-05
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Out1                          ce_out        2.26757e-05
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: reverberador_completo
-- Source Path: rev_completo_with_audio_backup/reverberador_completo 
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.reverberador_completo_pkg.ALL;

ENTITY reverberador_completo IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        In1                               :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        ce_out                            :   OUT   std_logic;
        Out1                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
        );
END reverberador_completo;


ARCHITECTURE rtl OF reverberador_completo IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL In1_signed                       : signed(15 DOWNTO 0);  -- int16
  SIGNAL attenuation9_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL attenuation9_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay1_out1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL attenuation1_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL attenuation1_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum1_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay1_reg                       : vector_of_signed16(0 TO 1309);  -- sfix16 [1310]
  SIGNAL Delay3_out1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL attenuation2_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL attenuation2_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum3_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay3_reg                       : vector_of_signed16(0 TO 1635);  -- sfix16 [1636]
  SIGNAL Delay2_out1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL attenuation3_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL attenuation3_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum4_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay2_reg                       : vector_of_signed16(0 TO 1811);  -- sfix16 [1812]
  SIGNAL Delay4_out1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL attenuation4_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL attenuation4_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum5_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay4_reg                       : vector_of_signed16(0 TO 1926);  -- sfix16 [1927]
  SIGNAL Sum6_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum2_add_temp                    : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL Sum2_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay5_out1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL attenuation5_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL attenuation5_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum7_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay5_reg                       : vector_of_signed16(0 TO 4269);  -- sfix16 [4270]
  SIGNAL attenuation7_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL attenuation7_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum8_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay6_out1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL attenuation6_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL attenuation6_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum9_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay6_reg                       : vector_of_signed16(0 TO 1451);  -- sfix16 [1452]
  SIGNAL attenuation8_mul_temp            : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL attenuation8_out1                : signed(15 DOWNTO 0);  -- int16
  SIGNAL Sum10_out1                       : signed(15 DOWNTO 0);  -- int16

BEGIN
  In1_signed <= signed(In1);

  attenuation9_mul_temp <= to_signed(16#6666#, 16) * In1_signed;
  attenuation9_out1 <= attenuation9_mul_temp(31 DOWNTO 16) + ('0' & (attenuation9_mul_temp(15) AND (( NOT attenuation9_mul_temp(31)) OR (attenuation9_mul_temp(14) OR attenuation9_mul_temp(13) OR attenuation9_mul_temp(12) OR attenuation9_mul_temp(11) OR attenuation9_mul_temp(10) OR attenuation9_mul_temp(9) OR attenuation9_mul_temp(8) OR attenuation9_mul_temp(7) OR attenuation9_mul_temp(6) OR attenuation9_mul_temp(5) OR attenuation9_mul_temp(4) OR attenuation9_mul_temp(3) OR attenuation9_mul_temp(2) OR attenuation9_mul_temp(1) OR attenuation9_mul_temp(0)))));

  enb <= clk_enable;

  attenuation1_mul_temp <= to_signed(16#7333#, 16) * Delay1_out1;
  attenuation1_out1 <= attenuation1_mul_temp(30 DOWNTO 15) + ('0' & (attenuation1_mul_temp(14) AND (( NOT attenuation1_mul_temp(31)) OR (attenuation1_mul_temp(13) OR attenuation1_mul_temp(12) OR attenuation1_mul_temp(11) OR attenuation1_mul_temp(10) OR attenuation1_mul_temp(9) OR attenuation1_mul_temp(8) OR attenuation1_mul_temp(7) OR attenuation1_mul_temp(6) OR attenuation1_mul_temp(5) OR attenuation1_mul_temp(4) OR attenuation1_mul_temp(3) OR attenuation1_mul_temp(2) OR attenuation1_mul_temp(1) OR attenuation1_mul_temp(0)))));

  Sum1_out1 <= attenuation9_out1 + attenuation1_out1;

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_reg <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay1_reg(0) <= Sum1_out1;
        Delay1_reg(1 TO 1309) <= Delay1_reg(0 TO 1308);
      END IF;
    END IF;
  END PROCESS Delay1_process;

  Delay1_out1 <= Delay1_reg(1309);

  attenuation2_mul_temp <= to_signed(16#70A4#, 16) * Delay3_out1;
  attenuation2_out1 <= attenuation2_mul_temp(30 DOWNTO 15) + ('0' & (attenuation2_mul_temp(14) AND (( NOT attenuation2_mul_temp(31)) OR (attenuation2_mul_temp(13) OR attenuation2_mul_temp(12) OR attenuation2_mul_temp(11) OR attenuation2_mul_temp(10) OR attenuation2_mul_temp(9) OR attenuation2_mul_temp(8) OR attenuation2_mul_temp(7) OR attenuation2_mul_temp(6) OR attenuation2_mul_temp(5) OR attenuation2_mul_temp(4) OR attenuation2_mul_temp(3) OR attenuation2_mul_temp(2) OR attenuation2_mul_temp(1) OR attenuation2_mul_temp(0)))));

  Sum3_out1 <= attenuation9_out1 + attenuation2_out1;

  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_reg <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay3_reg(0) <= Sum3_out1;
        Delay3_reg(1 TO 1635) <= Delay3_reg(0 TO 1634);
      END IF;
    END IF;
  END PROCESS Delay3_process;

  Delay3_out1 <= Delay3_reg(1635);

  attenuation3_mul_temp <= to_signed(16#6F5C#, 16) * Delay2_out1;
  attenuation3_out1 <= attenuation3_mul_temp(30 DOWNTO 15) + ('0' & (attenuation3_mul_temp(14) AND (( NOT attenuation3_mul_temp(31)) OR (attenuation3_mul_temp(13) OR attenuation3_mul_temp(12) OR attenuation3_mul_temp(11) OR attenuation3_mul_temp(10) OR attenuation3_mul_temp(9) OR attenuation3_mul_temp(8) OR attenuation3_mul_temp(7) OR attenuation3_mul_temp(6) OR attenuation3_mul_temp(5) OR attenuation3_mul_temp(4) OR attenuation3_mul_temp(3) OR attenuation3_mul_temp(2) OR attenuation3_mul_temp(1) OR attenuation3_mul_temp(0)))));

  Sum4_out1 <= attenuation9_out1 + attenuation3_out1;

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_reg <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay2_reg(0) <= Sum4_out1;
        Delay2_reg(1 TO 1811) <= Delay2_reg(0 TO 1810);
      END IF;
    END IF;
  END PROCESS Delay2_process;

  Delay2_out1 <= Delay2_reg(1811);

  attenuation4_mul_temp <= to_signed(16#6E14#, 16) * Delay4_out1;
  attenuation4_out1 <= attenuation4_mul_temp(30 DOWNTO 15) + ('0' & (attenuation4_mul_temp(14) AND (( NOT attenuation4_mul_temp(31)) OR (attenuation4_mul_temp(13) OR attenuation4_mul_temp(12) OR attenuation4_mul_temp(11) OR attenuation4_mul_temp(10) OR attenuation4_mul_temp(9) OR attenuation4_mul_temp(8) OR attenuation4_mul_temp(7) OR attenuation4_mul_temp(6) OR attenuation4_mul_temp(5) OR attenuation4_mul_temp(4) OR attenuation4_mul_temp(3) OR attenuation4_mul_temp(2) OR attenuation4_mul_temp(1) OR attenuation4_mul_temp(0)))));

  Sum5_out1 <= attenuation9_out1 + attenuation4_out1;

  Delay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay4_reg <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay4_reg(0) <= Sum5_out1;
        Delay4_reg(1 TO 1926) <= Delay4_reg(0 TO 1925);
      END IF;
    END IF;
  END PROCESS Delay4_process;

  Delay4_out1 <= Delay4_reg(1926);

  Sum6_out1 <= Delay2_out1 + Delay4_out1;

  Sum2_add_temp <= Delay1_out1 + Delay3_out1;
  Sum2_out1 <= Sum2_add_temp + Sum6_out1;

  attenuation5_mul_temp <= to_signed(16#51EC#, 16) * Delay5_out1;
  attenuation5_out1 <= (resize(attenuation5_mul_temp(31 DOWNTO 21), 16)) + ('0' & (attenuation5_mul_temp(20) AND (( NOT attenuation5_mul_temp(31)) OR (attenuation5_mul_temp(19) OR attenuation5_mul_temp(18) OR attenuation5_mul_temp(17) OR attenuation5_mul_temp(16) OR attenuation5_mul_temp(15) OR attenuation5_mul_temp(14) OR attenuation5_mul_temp(13) OR attenuation5_mul_temp(12) OR attenuation5_mul_temp(11) OR attenuation5_mul_temp(10) OR attenuation5_mul_temp(9) OR attenuation5_mul_temp(8) OR attenuation5_mul_temp(7) OR attenuation5_mul_temp(6) OR attenuation5_mul_temp(5) OR attenuation5_mul_temp(4) OR attenuation5_mul_temp(3) OR attenuation5_mul_temp(2) OR attenuation5_mul_temp(1) OR attenuation5_mul_temp(0)))));

  Sum7_out1 <= attenuation5_out1 + Sum2_out1;

  Delay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay5_reg <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay5_reg(0) <= Sum7_out1;
        Delay5_reg(1 TO 4269) <= Delay5_reg(0 TO 4268);
      END IF;
    END IF;
  END PROCESS Delay5_process;

  Delay5_out1 <= Delay5_reg(4269);

  attenuation7_mul_temp <= to_signed(-16#51EC#, 16) * Sum7_out1;
  attenuation7_out1 <= (resize(attenuation7_mul_temp(31 DOWNTO 21), 16)) + ('0' & (attenuation7_mul_temp(20) AND (( NOT attenuation7_mul_temp(31)) OR (attenuation7_mul_temp(19) OR attenuation7_mul_temp(18) OR attenuation7_mul_temp(17) OR attenuation7_mul_temp(16) OR attenuation7_mul_temp(15) OR attenuation7_mul_temp(14) OR attenuation7_mul_temp(13) OR attenuation7_mul_temp(12) OR attenuation7_mul_temp(11) OR attenuation7_mul_temp(10) OR attenuation7_mul_temp(9) OR attenuation7_mul_temp(8) OR attenuation7_mul_temp(7) OR attenuation7_mul_temp(6) OR attenuation7_mul_temp(5) OR attenuation7_mul_temp(4) OR attenuation7_mul_temp(3) OR attenuation7_mul_temp(2) OR attenuation7_mul_temp(1) OR attenuation7_mul_temp(0)))));

  Sum8_out1 <= Delay5_out1 + attenuation7_out1;

  attenuation6_mul_temp <= to_signed(16#51EC#, 16) * Delay6_out1;
  attenuation6_out1 <= (resize(attenuation6_mul_temp(31 DOWNTO 21), 16)) + ('0' & (attenuation6_mul_temp(20) AND (( NOT attenuation6_mul_temp(31)) OR (attenuation6_mul_temp(19) OR attenuation6_mul_temp(18) OR attenuation6_mul_temp(17) OR attenuation6_mul_temp(16) OR attenuation6_mul_temp(15) OR attenuation6_mul_temp(14) OR attenuation6_mul_temp(13) OR attenuation6_mul_temp(12) OR attenuation6_mul_temp(11) OR attenuation6_mul_temp(10) OR attenuation6_mul_temp(9) OR attenuation6_mul_temp(8) OR attenuation6_mul_temp(7) OR attenuation6_mul_temp(6) OR attenuation6_mul_temp(5) OR attenuation6_mul_temp(4) OR attenuation6_mul_temp(3) OR attenuation6_mul_temp(2) OR attenuation6_mul_temp(1) OR attenuation6_mul_temp(0)))));

  Sum9_out1 <= attenuation6_out1 + Sum8_out1;

  Delay6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay6_reg <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay6_reg(0) <= Sum9_out1;
        Delay6_reg(1 TO 1451) <= Delay6_reg(0 TO 1450);
      END IF;
    END IF;
  END PROCESS Delay6_process;

  Delay6_out1 <= Delay6_reg(1451);

  attenuation8_mul_temp <= to_signed(-16#51EC#, 16) * Sum9_out1;
  attenuation8_out1 <= (resize(attenuation8_mul_temp(31 DOWNTO 21), 16)) + ('0' & (attenuation8_mul_temp(20) AND (( NOT attenuation8_mul_temp(31)) OR (attenuation8_mul_temp(19) OR attenuation8_mul_temp(18) OR attenuation8_mul_temp(17) OR attenuation8_mul_temp(16) OR attenuation8_mul_temp(15) OR attenuation8_mul_temp(14) OR attenuation8_mul_temp(13) OR attenuation8_mul_temp(12) OR attenuation8_mul_temp(11) OR attenuation8_mul_temp(10) OR attenuation8_mul_temp(9) OR attenuation8_mul_temp(8) OR attenuation8_mul_temp(7) OR attenuation8_mul_temp(6) OR attenuation8_mul_temp(5) OR attenuation8_mul_temp(4) OR attenuation8_mul_temp(3) OR attenuation8_mul_temp(2) OR attenuation8_mul_temp(1) OR attenuation8_mul_temp(0)))));

  Sum10_out1 <= Delay6_out1 + attenuation8_out1;

  Out1 <= std_logic_vector(Sum10_out1);

  ce_out <= clk_enable;

END rtl;

